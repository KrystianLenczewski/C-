// <auto-generated />
using System;
using MemeGenerator.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MemeGenerator.Migrations
{
    [DbContext(typeof(memyContext))]
    partial class memyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MemeGenerator.Models.Categories", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameCategory")
                        .IsRequired();

                    b.HasKey("IdCategory");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MemeGenerator.Models.Marking", b =>
                {
                    b.Property<int>("IdMakring")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Authorr");

                    b.Property<int?>("CountDislike");

                    b.Property<int?>("CountLike");

                    b.Property<int>("IdMema");

                    b.HasKey("IdMakring");

                    b.ToTable("Marking");
                });

            modelBuilder.Entity("MemeGenerator.Models.MemeReports", b =>
                {
                    b.Property<int>("Id_report")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("Id_meme");

                    b.Property<string>("login");

                    b.HasKey("Id_report");

                    b.ToTable("MemeReports");
                });

            modelBuilder.Entity("MemeGenerator.Models.Memy", b =>
                {
                    b.Property<int>("Id_mema")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autor");

                    b.Property<string>("Category")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<int?>("Dislike");

                    b.Property<int?>("Like");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<string>("coverImg");

                    b.Property<DateTime?>("modifyDate");

                    b.Property<DateTime?>("releaseDate");

                    b.HasKey("Id_mema");

                    b.ToTable("Memy");
                });
#pragma warning restore 612, 618
        }
    }
}
